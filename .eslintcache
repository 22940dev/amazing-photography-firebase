[{"C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\index.js":"1","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\App.js":"2","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\Login.js":"3","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\Home.js":"4","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\context\\AuthContext.js":"5","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\firebase\\index.js":"6","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\context\\MainContext.js":"7","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\Pics.js":"8","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\Create.js":"9","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\UploadImage.js":"10","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\Albums.js":"11","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\Album.js":"12","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\Update.js":"13","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\Albumreview.js":"14"},{"size":472,"mtime":1610374757950,"results":"15","hashOfConfig":"16"},{"size":2629,"mtime":1610375263541,"results":"17","hashOfConfig":"16"},{"size":2046,"mtime":1609843680011,"results":"18","hashOfConfig":"16"},{"size":829,"mtime":1609951869315,"results":"19","hashOfConfig":"16"},{"size":1583,"mtime":1609811872609,"results":"20","hashOfConfig":"16"},{"size":923,"mtime":1609807091424,"results":"21","hashOfConfig":"16"},{"size":3340,"mtime":1610379289814,"results":"22","hashOfConfig":"16"},{"size":3785,"mtime":1610373455388,"results":"23","hashOfConfig":"16"},{"size":4220,"mtime":1610374726172,"results":"24","hashOfConfig":"16"},{"size":3374,"mtime":1610032014064,"results":"25","hashOfConfig":"16"},{"size":1983,"mtime":1610373483830,"results":"26","hashOfConfig":"16"},{"size":4626,"mtime":1610373530659,"results":"27","hashOfConfig":"16"},{"size":4532,"mtime":1610373602793,"results":"28","hashOfConfig":"16"},{"size":4937,"mtime":1610410428779,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"10t8fe1",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\index.js",[],["67","68"],"C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\App.js",[],"C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\Login.js",[],"C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\Home.js",["69"],"import { Container, Col, Media, Card } from \"react-bootstrap\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Col lg={7} className=\"my-5 pt-3 mx-auto\">\r\n          <Card>\r\n            <img\r\n              width=\"100%\"\r\n              height=\"auto\"\r\n              src=\"https://images.unsplash.com/photo-1596923322832-ada855ab1a61?ixid=MXwxMjA3fDB8MHxzZWFyY2h8Mzl8fHBob3RvZ3JhcGh5JTIwY2FtZXJhfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n              alt=\"Generic placeholder\"\r\n            />\r\n            <Card.Body id=\"pic-message\">\r\n              <h2>Welcome to Amazing Photography</h2>\r\n              <p>This is the place where your photo dreams become true</p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\context\\AuthContext.js",["70"],"import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\n\r\nimport { useMainContext } from \"./MainContext\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nconst AuthContextProvider = (props) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const { setUser } = useMainContext();\r\n\r\n  const login = (email, password) => {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(\"\");\r\n    return auth.signOut();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      // auth state changed (by a user either logging in or out)\r\n      if (user) {\r\n        setUser(user);\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const contextValues = {\r\n    loading,\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValues}>\r\n      {loading && (\r\n        <div className=\"d-flex justify-content-center my-5\">\r\n          <Button variant=\"primary\" disabled>\r\n            <Spinner\r\n              as=\"span\"\r\n              animation=\"grow\"\r\n              size=\"sm\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            />\r\n            Loading...\r\n          </Button>\r\n        </div>\r\n      )}\r\n      {!loading && props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, useAuth, AuthContextProvider as default };\r\n","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\firebase\\index.js",[],"C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\context\\MainContext.js",["71","72","73"],"import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\n// import { useParams } from \"react-router-dom\";\r\n\r\nconst MainContext = createContext();\r\n\r\nconst useMainContext = () => {\r\n  return useContext(MainContext);\r\n};\r\n\r\nconst MainContextProvider = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [user, setUser] = useState(\"\");\r\n  const [allPicsInDb, setAllPics] = useState();\r\n  const [allAlbums, setAlbums] = useState();\r\n  const [currentAlbum, setCurrentAlbum] = useState(\"\");\r\n  const [albumPics, setAlbumPics] = useState([]);\r\n  const [clientAlbum, setClientAlbum] = useState({});\r\n  // const { albumId } = useParams();\r\n\r\n  const resetPicsSelection = () => {\r\n    const allPics = [...allPicsInDb];\r\n    allPics.map((picture) => (picture.selected = false));\r\n\r\n    db.collection(\"pics\")\r\n      .doc(\"all-pics\")\r\n      .set({ ...allPics })\r\n      .then(function () {\r\n        console.log(\"Document successfully written!\");\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error writing document: \", error);\r\n      });\r\n  };\r\n  const contextValues = {\r\n    setUser,\r\n    user,\r\n    allPicsInDb,\r\n    setAllPics,\r\n    allAlbums,\r\n    resetPicsSelection,\r\n    setCurrentAlbum,\r\n    currentAlbum,\r\n    albumPics,\r\n    setAlbumPics,\r\n    clientAlbum,\r\n    setClientAlbum,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setLoading(false);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    let picsInAlbum = [];\r\n    setAlbumPics([]);\r\n    if (currentAlbum && currentAlbum.photo_urls) {\r\n      picsInAlbum = currentAlbum.photo_urls.map((photo) => photo);\r\n\r\n      if (picsInAlbum.length) {\r\n        let emptyArr;\r\n        emptyArr = [];\r\n        allPicsInDb.map((pic) => {\r\n          picsInAlbum.map((albumPic) => {\r\n            if (albumPic === pic.url) {\r\n              emptyArr.push(pic);\r\n            }\r\n          });\r\n        });\r\n        if (emptyArr.length) {\r\n          console.log(emptyArr);\r\n          setAlbumPics(emptyArr);\r\n        }\r\n\r\n        emptyArr = [];\r\n      }\r\n    }\r\n  }, [currentAlbum]);\r\n\r\n  useEffect(() => {\r\n    let snapshotPics;\r\n    let snapshotAlbums;\r\n\r\n    db.collection(`pics`).onSnapshot((querySnapshot) => {\r\n      snapshotPics = [];\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        snapshotPics.push(doc.data());\r\n      });\r\n      setAllPics(Object.values(...snapshotPics));\r\n    });\r\n\r\n    db.collection(`albums`).onSnapshot((querySnapshot) => {\r\n      snapshotAlbums = [];\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        snapshotAlbums.push(doc.data());\r\n      });\r\n      setAlbums(snapshotAlbums);\r\n    });\r\n\r\n    return setAllPics();\r\n  }, []);\r\n\r\n  return (\r\n    <MainContext.Provider value={contextValues}>\r\n      {loading && (\r\n        <div className=\"d-flex justify-content-center my-5\">\r\n          <Button variant=\"primary\" disabled>\r\n            <Spinner\r\n              as=\"span\"\r\n              animation=\"grow\"\r\n              size=\"sm\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            />\r\n            Loading...\r\n          </Button>\r\n        </div>\r\n      )}\r\n      {!loading && props.children}\r\n    </MainContext.Provider>\r\n  );\r\n};\r\n\r\nexport { MainContext, useMainContext, MainContextProvider as default };\r\n","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\Pics.js",["74","75","76"],"import { useEffect, useState, useRef } from \"react\";\r\nimport { db } from \"../firebase/index\";\r\nimport { useMainContext } from \"../context/MainContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Container, Row, Card, Media, Button } from \"react-bootstrap\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport IndeterminateCheckBoxIcon from \"@material-ui/icons/IndeterminateCheckBox\";\r\n\r\nconst Pics = () => {\r\n  const [picsLoaded, setLoaded] = useState(false);\r\n  const { setAllPics, allPicsInDb, resetPicsSelection } = useMainContext();\r\n  const allPicsFix = useRef([]);\r\n  const navigate = useNavigate();\r\n\r\n  const selectPic = (pic, ind) => {\r\n    // document.getElementById(ind).style.outline = \"2px solid green\";\r\n\r\n    allPicsFix.current.map((picture) => {\r\n      if (picture.url === pic) {\r\n        console.log({ ...allPicsFix.current });\r\n        return (picture.selected = true);\r\n      }\r\n    });\r\n\r\n    db.collection(\"pics\")\r\n      .doc(\"all-pics\")\r\n      .set({ ...allPicsFix.current })\r\n      .then(function () {\r\n        console.log(\"Document successfully written!\");\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error writing document: \", error);\r\n      });\r\n  };\r\n\r\n  const deleteSelection = (pic, ind) => {\r\n    // document.getElementById(ind).style.outline = \"2px solid red\";\r\n    allPicsFix.current.map((picture) => {\r\n      if (picture.url === pic) {\r\n        console.log({ ...allPicsFix.current });\r\n        return (picture.selected = false);\r\n      }\r\n    });\r\n    db.collection(\"pics\")\r\n      .doc(\"all-pics\")\r\n      .set({ ...allPicsFix.current })\r\n      .then(function () {\r\n        console.log(\"Document successfully written!\");\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error writing document: \", error);\r\n      });\r\n  };\r\n\r\n  const createAlbum = (e) => {\r\n    e.preventDefault();\r\n    setAllPics(allPicsFix.current);\r\n    navigate(\"/albums/create\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (allPicsInDb && allPicsInDb.length) {\r\n      allPicsFix.current = [...allPicsInDb];\r\n\r\n      setLoaded(true);\r\n    }\r\n  }, [allPicsInDb]);\r\n\r\n  useEffect(() => {\r\n    if (allPicsInDb && allPicsInDb.length) {\r\n      resetPicsSelection();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row lg={9} md={10} className=\"d-flex mt-5 mx-auto\">\r\n          {picsLoaded &&\r\n            allPicsFix.current &&\r\n            allPicsFix.current.map((pic, index) => {\r\n              return (\r\n                <Card\r\n                  className={\r\n                    pic.selected\r\n                      ? \"pic-selected ml-3 mb-3\"\r\n                      : \"not-selected ml-3 mb-3\"\r\n                  }\r\n                  id=\"media\"\r\n                  key={index}\r\n                >\r\n                  <Media key={pic.id} className=\"pic my-auto\">\r\n                    <img\r\n                      width=\"100%\"\r\n                      height=\"auto\"\r\n                      src={pic.url}\r\n                      alt=\"Generic placeholder\"\r\n                    />\r\n                  </Media>\r\n                  <div className=\"d-flex mx-auto my-2\">\r\n                    <AddCircleOutlineIcon\r\n                      onClick={() => selectPic(pic.url, index)}\r\n                      color=\"primary\"\r\n                    />\r\n                    <IndeterminateCheckBoxIcon\r\n                      onClick={() => deleteSelection(pic.url, index)}\r\n                      color=\"secondary\"\r\n                    />\r\n                  </div>\r\n                </Card>\r\n              );\r\n            })}\r\n        </Row>\r\n      </Container>\r\n      <Button onClick={createAlbum} className=\"my-3\" variant=\"primary\">\r\n        Create Album\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pics;\r\n","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\Create.js",["77","78","79","80","81"],"import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Col,\r\n  Alert,\r\n  Card,\r\n  Media,\r\n} from \"react-bootstrap\";\r\nimport { db } from \"../firebase/index\";\r\n// import { useAuth } from \"../context/AuthContext\";\r\nimport { useMainContext } from \"../context/MainContext\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport \"../App.css\";\r\n\r\nconst Create = () => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [falseyPics, setFalsey] = useState(false);\r\n  const [albumName, setAlbumName] = useState(\"\");\r\n  const { user, allPicsInDb, allAlbums } = useMainContext();\r\n  const [file, setFile] = useState(false);\r\n  const [code, setCode] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const setName = (e) => {\r\n    setAlbumName(e.target.value);\r\n  };\r\n\r\n  const confirmFile = (message) => {\r\n    if (message === true) {\r\n      setFile(false);\r\n    } else {\r\n      setFile(true);\r\n    }\r\n  };\r\n\r\n  const createAlbum = async (e) => {\r\n    e.preventDefault();\r\n    const truthy = allPicsInDb.filter((pic) => pic.selected === true);\r\n    const urls = truthy.map((pic) => pic.url);\r\n    //const albums = {...allAlbums};\r\n    let ranNum;\r\n    ranNum = Math.floor(Math.random() * 10000000);\r\n    await db\r\n      .collection(\"albums\")\r\n      .doc(`${albumName.toLowerCase()}`)\r\n      .set({\r\n        title: albumName.toLowerCase(),\r\n        cust_apppproved: false,\r\n        url: Math.floor(Math.random() * 200).toString(),\r\n        photo_urls: [...urls],\r\n        code: ranNum,\r\n      })\r\n      .then(function () {\r\n        console.log(\"Document successfully written!\");\r\n        setLoaded(false);\r\n        setCode(ranNum);\r\n        setTimeout(() => {\r\n          navigate(\"/albums\");\r\n        }, 5000);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error writing document: \", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (allPicsInDb && allPicsInDb.length) {\r\n      setLoaded(true);\r\n    }\r\n  }, [allPicsInDb]);\r\n\r\n  return (\r\n    <>\r\n      {loaded && allPicsInDb && (\r\n        <Container>\r\n          <Col lg={10} className=\"my-5 pt-5 mx-auto\">\r\n            <Form className=\"mx-auto form px-5 py-5\" onSubmit={createAlbum}>\r\n              <Form.Group>\r\n                <Form.Label>\r\n                  <h2>CREATE YOUR ALBUM</h2>\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className=\"my-3\"\r\n                  type=\"text\"\r\n                  placeholder=\"Set an album name\"\r\n                  onChange={setName}\r\n                  required\r\n                />\r\n                <Col lg={12} md={10} className=\"d-flex\">\r\n                  {allPicsInDb &&\r\n                    allPicsInDb.map((pic, index) => {\r\n                      if (pic.selected === true) {\r\n                        return (\r\n                          <Card className=\"ml-3\" id=\"media\" key={index}>\r\n                            <Media key={pic.id} className=\"my-auto\">\r\n                              <img\r\n                                width=\"100%\"\r\n                                height=\"auto\"\r\n                                src={pic.url}\r\n                                alt=\"Generic placeholder\"\r\n                              />\r\n                            </Media>\r\n                          </Card>\r\n                        );\r\n                      }\r\n                    })}\r\n                </Col>\r\n                <UploadImage albumName={albumName} setErrorMsg={confirmFile} />\r\n                <Button className=\"mt-0\" variant=\"primary\" type=\"submit\">\r\n                  Confirm\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n            {!file && (\r\n              <Alert variant=\"warning\">You haven´t chosen any pics</Alert>\r\n            )}\r\n          </Col>\r\n        </Container>\r\n      )}\r\n      {code && (\r\n        <Alert variant=\"success\">\r\n          <h2>Album succesfully created!</h2>\r\n          <p>\r\n            The album code for your customer is <strong>{code}</strong>\r\n          </p>\r\n          <p>You´ll be soon redirected to your albums, please wait ...</p>\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\UploadImage.js",["82","83","84","85","86","87","88","89"],"import React, { useCallback, useState, useEffect, useRef } from \"react\";\r\nimport { db, storage } from \"../firebase/index\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Alert from \"react-bootstrap\";\r\nimport { useMainContext } from \"../context/MainContext\";\r\n\r\nconst UploadImage = ({ albumName, setErrorMsg }) => {\r\n  const [uploadProgress, setUploadProgress] = useState(null);\r\n  const [uploadedImage, setUploadedImage] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const imageUrl = useRef([]);\r\n  const { setAllPics, allPicsInDb } = useMainContext();\r\n\r\n  useEffect(() => {\r\n    setErrorMsg(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      setErrorMsg(true);\r\n      setUploadProgress(null);\r\n      setUploadedImage(null);\r\n      setError(true);\r\n      setIsSuccess(false);\r\n\r\n      return;\r\n    }\r\n\r\n    if (!albumName) {\r\n      alert(\"You need to set first an album name\");\r\n      return;\r\n    }\r\n\r\n    // reset environment\r\n    setError(null);\r\n    setErrorMsg(false);\r\n    setIsSuccess(false);\r\n\r\n    // get file reference\r\n    const fileRef = storage.ref(`allPics/${file.name}`);\r\n\r\n    // upload file to fileRef\r\n    const uploadTask = fileRef.put(file);\r\n\r\n    // attach listener for `state_changed`-event\r\n    uploadTask.on(\"state_changed\", (taskSnapshot) => {\r\n      setUploadProgress(\r\n        Math.round(\r\n          (taskSnapshot.bytesTransferred / taskSnapshot.totalBytes) * 100\r\n        )\r\n      );\r\n    });\r\n\r\n    // are we there yet?\r\n    uploadTask.then((snapshot) => {\r\n      // retrieve URL to uploaded file\r\n      snapshot.ref.getDownloadURL().then((url) => {\r\n        // add uploaded file to db\r\n        if (url) {\r\n          imageUrl.current = url;\r\n\r\n          let allPics = { ...allPicsInDb };\r\n          let ranNum = Math.floor(Math.random() * 1000);\r\n\r\n          db.collection(\"pics\")\r\n            .doc(\"all-pics\")\r\n            .set({\r\n              ...allPics,\r\n              ranNum: {\r\n                id: ranNum,\r\n                url: imageUrl.current,\r\n                albums: [`${albumName.toLowerCase()}`],\r\n                selected: true,\r\n              },\r\n            })\r\n            .then(function () {\r\n              console.log(\"Document successfully written!\");\r\n            })\r\n            .catch(function (error) {\r\n              console.error(\"Error writing document: \", error);\r\n            });\r\n        }\r\n      });\r\n    });\r\n  }, [file]);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    acceptedFiles.forEach((file) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onabort = () => console.log(\"file reading was aborted\");\r\n      reader.onerror = () => console.log(\"file reading has failed\");\r\n      reader.onload = () => {\r\n        // Do whatever you want with the file contents\r\n        // const binaryStr = reader.result;\r\n        // console.log(binaryStr);\r\n        setFile(file);\r\n      };\r\n      reader.readAsArrayBuffer(file);\r\n    });\r\n  }, []);\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div className=\"upload-dropzone mx-auto my-5\" {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      <p>Drag 'n' drop some files here, or click to select files</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\Albums.js",[],"C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\Album.js",["90","91","92","93","94","95","96","97"],"import { useEffect, useState, useRef } from \"react\";\r\nimport { db } from \"../firebase/index\";\r\nimport { useMainContext } from \"../context/MainContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Container, Row, Card, Media, Button } from \"react-bootstrap\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport IndeterminateCheckBoxIcon from \"@material-ui/icons/IndeterminateCheckBox\";\r\n\r\nconst Album = () => {\r\n  const [picsLoaded, setLoaded] = useState(false);\r\n  const {\r\n    setAllPics,\r\n    resetPicsSelection,\r\n    setAlbumPics,\r\n    allPicsInDb,\r\n    currentAlbum,\r\n    albumPics,\r\n  } = useMainContext();\r\n  const allPicsFix = useRef([]);\r\n  const [thisAlbumFix, setAlbumFix] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const selectPic = (pic, ind) => {\r\n    allPicsFix.current.map((picture) => {\r\n      if (picture.url === pic) {\r\n        console.log({ ...allPicsFix.current });\r\n        return (picture.selected = true);\r\n      }\r\n    });\r\n\r\n    let emptyArr;\r\n\r\n    emptyArr = [...thisAlbumFix];\r\n\r\n    allPicsFix.current.map((pic) => {\r\n      emptyArr.map((albumPic, index) => {\r\n        if (albumPic.url === pic.url && pic.selected === true) {\r\n          emptyArr.splice(index, 1);\r\n          emptyArr.push(pic);\r\n        }\r\n      });\r\n    });\r\n\r\n    setAlbumFix([...emptyArr]);\r\n    emptyArr = [];\r\n\r\n    db.collection(\"pics\")\r\n      .doc(\"all-pics\")\r\n      .set({ ...allPicsFix.current })\r\n      .then(function () {\r\n        console.log(\"Document successfully written!\");\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error writing document: \", error);\r\n      });\r\n  };\r\n\r\n  const deleteSelection = (pic, ind) => {\r\n    allPicsFix.current.map((picture) => {\r\n      if (picture.url === pic) {\r\n        console.log({ ...allPicsFix.current });\r\n        return (picture.selected = false);\r\n      }\r\n    });\r\n\r\n    let emptyArr;\r\n\r\n    emptyArr = [...thisAlbumFix];\r\n\r\n    allPicsFix.current.map((pic) => {\r\n      emptyArr.map((albumPic, index) => {\r\n        if (albumPic.url === pic.url && pic.selected === false) {\r\n          emptyArr.splice(index, 1);\r\n          emptyArr.push(pic);\r\n        }\r\n      });\r\n    });\r\n\r\n    setAlbumFix([...emptyArr]);\r\n    emptyArr = [];\r\n\r\n    db.collection(\"pics\")\r\n      .doc(\"all-pics\")\r\n      .set({ ...allPicsFix.current })\r\n      .then(function () {\r\n        console.log(\"Document successfully written!\");\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error writing document: \", error);\r\n      });\r\n  };\r\n\r\n  const updateAlbum = (e) => {\r\n    e.preventDefault();\r\n    setAllPics(allPicsFix.current);\r\n    navigate(`/albums/${currentAlbum.code}/update`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (albumPics && albumPics.length) {\r\n      resetPicsSelection();\r\n      //   thisAlbumFix.current.push(...albumPics);\r\n      setAlbumFix([...albumPics]);\r\n\r\n      setLoaded(true);\r\n    }\r\n  }, [albumPics]);\r\n\r\n  useEffect(() => {\r\n    if (allPicsInDb && allPicsInDb.length) {\r\n      allPicsFix.current = [...allPicsInDb];\r\n\r\n      setLoaded(true);\r\n    }\r\n  }, [allPicsInDb]);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row lg={9} className=\"d-flex mt-5 mx-auto\">\r\n          {picsLoaded &&\r\n            thisAlbumFix.length &&\r\n            thisAlbumFix.map((pic, index) => {\r\n              return (\r\n                <Card\r\n                  className={\r\n                    pic.selected\r\n                      ? \"pic-selected ml-3 mb-3\"\r\n                      : \"not-selected ml-3 mb-3\"\r\n                  }\r\n                  id=\"media\"\r\n                  key={index}\r\n                >\r\n                  <Media key={pic.id} className=\"pic my-auto\">\r\n                    <img\r\n                      width=\"100%\"\r\n                      height=\"auto\"\r\n                      src={pic.url}\r\n                      alt=\"Generic placeholder\"\r\n                    />\r\n                  </Media>\r\n                  <div className=\"d-flex mx-auto my-2\">\r\n                    <AddCircleOutlineIcon\r\n                      onClick={() => selectPic(pic.url, index)}\r\n                      color=\"primary\"\r\n                    />\r\n                    <IndeterminateCheckBoxIcon\r\n                      onClick={() => deleteSelection(pic.url, index)}\r\n                      color=\"secondary\"\r\n                    />\r\n                  </div>\r\n                </Card>\r\n              );\r\n            })}\r\n        </Row>\r\n      </Container>\r\n      <Button onClick={updateAlbum} className=\"my-3\" variant=\"primary\">\r\n        Update Album\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Album;\r\n","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\Update.js",["98","99","100","101","102"],"import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Col,\r\n  Alert,\r\n  Card,\r\n  Media,\r\n} from \"react-bootstrap\";\r\nimport { db } from \"../firebase/index\";\r\n// import { useAuth } from \"../context/AuthContext\";\r\nimport { useMainContext } from \"../context/MainContext\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport \"../App.css\";\r\n\r\nconst Update = () => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [falseyPics, setFalsey] = useState(false);\r\n  const [albumName, setAlbumName] = useState(\"\");\r\n  const { user, allPicsInDb, allAlbums, currentAlbum } = useMainContext();\r\n  const [code, setCode] = useState(\"\");\r\n  const [file, setFile] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const setName = (e) => {\r\n    setAlbumName(e.target.value);\r\n  };\r\n\r\n  const confirmFile = (message) => {\r\n    if (message === true) {\r\n      setFile(false);\r\n    } else {\r\n      setFile(true);\r\n    }\r\n  };\r\n\r\n  const updateAlbum = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const truthy = allPicsInDb.filter((pic) => pic.selected === true);\r\n    const urls = truthy.map((pic) => pic.url);\r\n    //const albums = {...allAlbums};\r\n    if (currentAlbum.title !== albumName) {\r\n      db.collection(\"albums\")\r\n        .doc(`${currentAlbum.title.toLowerCase()}`)\r\n        .delete();\r\n    }\r\n    let ranNum;\r\n    ranNum = Math.floor(Math.random() * 10000000);\r\n    await db\r\n      .collection(\"albums\")\r\n      .doc(`${albumName.toLowerCase()}`)\r\n      .set({\r\n        title: albumName.toLowerCase(),\r\n        cust_apppproved: false,\r\n        url: Math.floor(Math.random() * 200).toString(),\r\n        photo_urls: [...urls],\r\n        code: ranNum,\r\n      })\r\n      .then(function () {\r\n        console.log(\"Document successfully written!\");\r\n        setLoaded(false);\r\n        setCode(ranNum);\r\n        setTimeout(() => {\r\n          navigate(\"/albums\");\r\n        }, 5000);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error writing document: \", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (allPicsInDb && allPicsInDb.length) {\r\n      setLoaded(true);\r\n    }\r\n  }, [allPicsInDb]);\r\n\r\n  return (\r\n    <>\r\n      {loaded && allPicsInDb && (\r\n        <Container>\r\n          <Col lg={10} className=\"my-5 pt-5 mx-auto\">\r\n            <Form className=\"mx-auto form px-5 py-5\" onSubmit={updateAlbum}>\r\n              <Form.Group>\r\n                <Form.Label>\r\n                  <h2>UPDATE YOUR ALBUM</h2>\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className=\"my-3\"\r\n                  type=\"text\"\r\n                  placeholder={\r\n                    currentAlbum\r\n                      ? currentAlbum.title.toUpperCase()\r\n                      : \"Set an album name\"\r\n                  }\r\n                  onChange={setName}\r\n                  required\r\n                />\r\n                <Col lg={12} md={10} className=\"d-flex\">\r\n                  {allPicsInDb &&\r\n                    allPicsInDb.map((pic, index) => {\r\n                      if (pic.selected === true) {\r\n                        return (\r\n                          <Card className=\"ml-3\" id=\"media\" key={index}>\r\n                            <Media key={pic.id} className=\"my-auto\">\r\n                              <img\r\n                                width=\"100%\"\r\n                                height=\"auto\"\r\n                                src={pic.url}\r\n                                alt=\"Generic placeholder\"\r\n                              />\r\n                            </Media>\r\n                          </Card>\r\n                        );\r\n                      }\r\n                    })}\r\n                </Col>\r\n                <UploadImage albumName={albumName} setErrorMsg={confirmFile} />\r\n                <Button className=\"mt-0\" variant=\"primary\" type=\"submit\">\r\n                  Confirm\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n            {!file && (\r\n              <Alert variant=\"warning\">You haven´t chosen any pics</Alert>\r\n            )}\r\n          </Col>\r\n        </Container>\r\n      )}\r\n      {code && (\r\n        <Alert variant=\"success\">\r\n          <h2>Album succesfully updated!</h2>\r\n          <p>\r\n            The album code for your customer is <strong>{code}</strong>\r\n          </p>\r\n          <p>You´ll be soon redirected to your albums, please wait ...</p>\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Update;\r\n","C:\\Users\\gcs26\\Documents\\javascript 2\\Amazing photography\\amazing-photography\\src\\components\\Albumreview.js",["103","104","105","106","107","108","109","110","111","112","113"],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":26,"nodeType":"120","messageId":"121","endLine":1,"endColumn":31},{"ruleId":"122","severity":1,"message":"123","line":36,"column":6,"nodeType":"124","endLine":36,"endColumn":8,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":66,"column":31,"nodeType":"128","messageId":"129","endLine":66,"endColumn":33},{"ruleId":"126","severity":1,"message":"127","line":67,"column":38,"nodeType":"128","messageId":"129","endLine":67,"endColumn":40},{"ruleId":"122","severity":1,"message":"130","line":81,"column":6,"nodeType":"124","endLine":81,"endColumn":20,"suggestions":"131"},{"ruleId":"126","severity":1,"message":"132","line":19,"column":38,"nodeType":"128","messageId":"133","endLine":19,"endColumn":40},{"ruleId":"126","severity":1,"message":"132","line":39,"column":38,"nodeType":"128","messageId":"133","endLine":39,"endColumn":40},{"ruleId":"122","severity":1,"message":"134","line":74,"column":6,"nodeType":"124","endLine":74,"endColumn":8,"suggestions":"135"},{"ruleId":"118","severity":1,"message":"136","line":20,"column":10,"nodeType":"120","messageId":"121","endLine":20,"endColumn":20},{"ruleId":"118","severity":1,"message":"137","line":20,"column":22,"nodeType":"120","messageId":"121","endLine":20,"endColumn":31},{"ruleId":"118","severity":1,"message":"138","line":22,"column":11,"nodeType":"120","messageId":"121","endLine":22,"endColumn":15},{"ruleId":"118","severity":1,"message":"139","line":22,"column":30,"nodeType":"120","messageId":"121","endLine":22,"endColumn":39},{"ruleId":"126","severity":1,"message":"132","line":94,"column":50,"nodeType":"128","messageId":"133","endLine":94,"endColumn":52},{"ruleId":"118","severity":1,"message":"140","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":13},{"ruleId":"118","severity":1,"message":"141","line":8,"column":10,"nodeType":"120","messageId":"121","endLine":8,"endColumn":24},{"ruleId":"118","severity":1,"message":"142","line":9,"column":10,"nodeType":"120","messageId":"121","endLine":9,"endColumn":23},{"ruleId":"118","severity":1,"message":"143","line":10,"column":10,"nodeType":"120","messageId":"121","endLine":10,"endColumn":15},{"ruleId":"118","severity":1,"message":"144","line":11,"column":10,"nodeType":"120","messageId":"121","endLine":11,"endColumn":19},{"ruleId":"118","severity":1,"message":"145","line":14,"column":11,"nodeType":"120","messageId":"121","endLine":14,"endColumn":21},{"ruleId":"122","severity":1,"message":"146","line":18,"column":6,"nodeType":"124","endLine":18,"endColumn":8,"suggestions":"147"},{"ruleId":"122","severity":1,"message":"148","line":87,"column":6,"nodeType":"124","endLine":87,"endColumn":12,"suggestions":"149"},{"ruleId":"118","severity":1,"message":"150","line":15,"column":5,"nodeType":"120","messageId":"121","endLine":15,"endColumn":17},{"ruleId":"126","severity":1,"message":"132","line":25,"column":38,"nodeType":"128","messageId":"133","endLine":25,"endColumn":40},{"ruleId":"126","severity":1,"message":"127","line":36,"column":34,"nodeType":"128","messageId":"129","endLine":36,"endColumn":36},{"ruleId":"126","severity":1,"message":"127","line":37,"column":38,"nodeType":"128","messageId":"129","endLine":37,"endColumn":40},{"ruleId":"126","severity":1,"message":"132","line":60,"column":38,"nodeType":"128","messageId":"133","endLine":60,"endColumn":40},{"ruleId":"126","severity":1,"message":"127","line":71,"column":34,"nodeType":"128","messageId":"129","endLine":71,"endColumn":36},{"ruleId":"126","severity":1,"message":"127","line":72,"column":38,"nodeType":"128","messageId":"129","endLine":72,"endColumn":40},{"ruleId":"122","severity":1,"message":"151","line":108,"column":6,"nodeType":"124","endLine":108,"endColumn":17,"suggestions":"152"},{"ruleId":"118","severity":1,"message":"136","line":20,"column":10,"nodeType":"120","messageId":"121","endLine":20,"endColumn":20},{"ruleId":"118","severity":1,"message":"137","line":20,"column":22,"nodeType":"120","messageId":"121","endLine":20,"endColumn":31},{"ruleId":"118","severity":1,"message":"138","line":22,"column":11,"nodeType":"120","messageId":"121","endLine":22,"endColumn":15},{"ruleId":"118","severity":1,"message":"139","line":22,"column":30,"nodeType":"120","messageId":"121","endLine":22,"endColumn":39},{"ruleId":"126","severity":1,"message":"132","line":104,"column":50,"nodeType":"128","messageId":"133","endLine":104,"endColumn":52},{"ruleId":"118","severity":1,"message":"153","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":12},{"ruleId":"118","severity":1,"message":"154","line":22,"column":5,"nodeType":"120","messageId":"121","endLine":22,"endColumn":17},{"ruleId":"118","severity":1,"message":"155","line":24,"column":5,"nodeType":"120","messageId":"121","endLine":24,"endColumn":14},{"ruleId":"118","severity":1,"message":"156","line":36,"column":5,"nodeType":"120","messageId":"121","endLine":36,"endColumn":13},{"ruleId":"126","severity":1,"message":"132","line":41,"column":32,"nodeType":"128","messageId":"133","endLine":41,"endColumn":34},{"ruleId":"126","severity":1,"message":"127","line":44,"column":11,"nodeType":"157","messageId":"158","endLine":44,"endColumn":18},{"ruleId":"118","severity":1,"message":"156","line":61,"column":5,"nodeType":"120","messageId":"121","endLine":61,"endColumn":13},{"ruleId":"126","severity":1,"message":"132","line":66,"column":32,"nodeType":"128","messageId":"133","endLine":66,"endColumn":34},{"ruleId":"126","severity":1,"message":"127","line":69,"column":11,"nodeType":"157","messageId":"158","endLine":69,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":107,"column":25,"nodeType":"128","messageId":"129","endLine":107,"endColumn":27},{"ruleId":"122","severity":1,"message":"159","line":117,"column":6,"nodeType":"124","endLine":117,"endColumn":8,"suggestions":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'Media' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.","ArrayExpression",["163"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'allPicsInDb'. Either include it or remove the dependency array.",["164"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'allPicsInDb' and 'resetPicsSelection'. Either include them or remove the dependency array.",["165"],"'falseyPics' is assigned a value but never used.","'setFalsey' is assigned a value but never used.","'user' is assigned a value but never used.","'allAlbums' is assigned a value but never used.","'Alert' is defined but never used.","'uploadProgress' is assigned a value but never used.","'uploadedImage' is assigned a value but never used.","'error' is assigned a value but never used.","'isSuccess' is assigned a value but never used.","'setAllPics' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setErrorMsg'. Either include it or remove the dependency array. If 'setErrorMsg' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["166"],"React Hook useEffect has missing dependencies: 'albumName', 'allPicsInDb', and 'setErrorMsg'. Either include them or remove the dependency array. If 'setErrorMsg' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["167"],"'setAlbumPics' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'resetPicsSelection'. Either include it or remove the dependency array.",["168"],"'db' is defined but never used.","'currentAlbum' is assigned a value but never used.","'albumPics' is assigned a value but never used.","'emptyArr' is assigned a value but never used.","ReturnStatement","expectedReturnValue","React Hook useEffect has missing dependencies: 'albumId', 'allAlbums', and 'setClientAlbum'. Either include them or remove the dependency array.",["169"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [setUser]",{"range":"184","text":"185"},"Update the dependencies array to be: [allPicsInDb, currentAlbum]",{"range":"186","text":"187"},"Update the dependencies array to be: [allPicsInDb, resetPicsSelection]",{"range":"188","text":"189"},"Update the dependencies array to be: [setErrorMsg]",{"range":"190","text":"191"},"Update the dependencies array to be: [albumName, allPicsInDb, file, setErrorMsg]",{"range":"192","text":"193"},"Update the dependencies array to be: [albumPics, resetPicsSelection]",{"range":"194","text":"195"},"Update the dependencies array to be: [albumId, allAlbums, setClientAlbum]",{"range":"196","text":"197"},[912,914],"[setUser]",[2145,2159],"[allPicsInDb, currentAlbum]",[2258,2260],"[allPicsInDb, resetPicsSelection]",[727,729],"[setErrorMsg]",[2513,2519],"[albumName, allPicsInDb, file, setErrorMsg]",[2932,2943],"[albumPics, resetPicsSelection]",[2860,2862],"[albumId, allAlbums, setClientAlbum]"]